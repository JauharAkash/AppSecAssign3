Assignment 3 - Part 3

After looking at several yaml files and source code files. Following are the areas where I was able to find secret values and sensitive information embedded. 

1) GiftcardSite/GiftcardSite/settings.py, line 24 --> The secret key is exposed in plaintext

2) GiftcardSite/GiftcardSite/settings.py, line 88 --> Passed as an env variable but, written in plaintext in other .yaml file. Should be a secret value.

3) db/k8/db-deployment.yaml --> The 'thisisatestthing.' env value is exposed in the file.

4) db/k8s/db-deployment.yaml --> The 'thisisatestthing.' env value is exposed in the file.

5) GiftcardSite/k8/django-deploy.yaml --> The 'thisisatestthing.' env value is exposed in the file.


Since all the .yaml files (numbers 3-5) are using the same environment name and value. I created a new kubernetes file called securing-secrets-part1.yaml to be used in the .yaml files. The password in the file was base64 encoded using an online encoder similar to how the password is base64 encoded in django-admin-pass-secret.yaml. 
Then similar to how 'secretKeyRef' is used in GiftcardSite/k8/django-deploy.yaml. I used 'secretKeyRef' in the 3 .yaml files (db/k8/db-deployment.yaml, db/k8s/db-deployment.yaml, GiftcardSite/k8/django-deploy.yaml). 

(valueFrom:
     secretKeyRef:
          name: securing-secrets-part1
          key: MYSQL_ROOT_PASSWORD)
          
Following are the commands I used to rebuild the docker and run the updated 3 .yaml:

minikube delete
(restarted my VM)
minikube start
eval $(minikube docker-env)
docker build -t nyuappsec/assign3:v0 .
docker build -t nyuappsec/assign3-proxy:v0 proxy/
docker build -t nyuappsec/assign3-db:v0 db/
kubectl apply -f db/k8
kubectl apply -f GiftcardSite/k8/securing-secrets-part1.yaml
kubectl apply -f db/k8/db-deployment.yaml
kubectl apply -f db/k8s/db-deployment.yaml
kubectl apply -f GiftcardSite/k8/django-deploy.yaml

kubectl get pods
kubectl get service

After running 'minikube service proxy-service' command. Following is the output I saw on the terminal and along side the opening of the browser with the website. 


appsecstudent@appsecstudent-VirtualBox:~/Desktop/AppSecAssignment3.1$ minikube service proxy-service
|-----------|---------------|-------------|---------------------------|
| NAMESPACE |     NAME      | TARGET PORT |            URL            |
|-----------|---------------|-------------|---------------------------|
| default   | proxy-service |        8080 | http://192.168.49.2:30493 |
|-----------|---------------|-------------|---------------------------|
ðŸŽ‰  Opening service default/proxy-service in default browser...



Now since the value of secret is not hidden or encoded in the settings.py. I firstly encoded the value to base64. Then I put that value in the django-admin-pass-secret.yaml file. Then, I used that value stored in the secret-key varaible in the settings.py on line 50.

"SECRET_KEY = os.environ.get('secret-key')"

Then added the following code to be used in django-deploy.yaml on line 38:

(- name: secret-key
              valueFrom:
                secretKeyRef:
                    name: admin-login-secrets
                    key: secret-key)
                    
                    
 
Following are the commands I used to rebuild the docker:

minikube delete
(restarted my VM)
minikube start
eval $(minikube docker-env)
docker build -t nyuappsec/assign3:v0 .
docker build -t nyuappsec/assign3-proxy:v0 proxy/
docker build -t nyuappsec/assign3-db:v0 db/
kubectl apply -f db/k8
kubectl apply -f GiftcardSite/k8/securing-secrets-part1.yaml
kubectl apply -f db/k8/db-deployment.yaml
kubectl apply -f db/k8s/db-deployment.yaml
kubectl apply -f GiftcardSite/k8/django-deploy.yaml

kubectl get pods
kubectl get service

