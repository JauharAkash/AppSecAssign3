Part 3: Monitoring with Prometheus

Part 3.1: Remove unwanted monitoring.

In the GiftcardSite/LegacySite/views.py file I noticed that there were a lot of exposed secrets. The comment on line 50 helped me identify a monitoring feature which was coded in the views.py. The counter of how many times a password is utilized is certainly something that should never be collected or kept track of. I commented lines 51 - 54 to stop this monitoring as it will not impact any other capabilities. Will make it more secure and less vulnerable. 



Part 3.2: Expand reasonable monitoring.

There are things we may want to monitor using Prometheus. In this part of the assignment you should add a Prometheus counter that counts all of the times we purposely return a 404 message in views.py. These lines are caused by Database errors, so you should name this counter database_error_return_404.

As mentioned in the assignment instruction, I created/added a Prometheus counter that counts all of the times a 404 error message gets returned in views.py. On line 20, I created a key called database_error_return_404 to counter the 404 error and then wherever error 404 was used/returned I added the database_error_return_404 counter.

"graphs['database_error_return_404'] = Counter('database_error_return_404', 'The total number'\
  + ' of database error return 404.')"


 On lines 106, 112, 158, 164, 177, I have added the following line - 'graphs['database_error_return_404'].inc()'. This was done to iterate and loop the counter. 
 
 
 
 Part 3.3: Add Prometheus
 
 
 After looking at the hints in the assignment instructions, I installed helm and Prometheus. Following are the commands I used ('https://helm.sh/docs/intro/install/' and 'https://artifacthub.io/packages/helm/prometheus-community/prometheus'):
 
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
helm repo add stable https://charts.helm.sh/stable
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm search repo prometheus-community
helm install --generate-name stable/prometheus-operator  --> This command didn't work for me. I got the following error - 

(WARNING: This chart is deprecated
Error: INSTALLATION FAILED: failed to install CRD crds/crd-alertmanager.yaml: resource mapping not found for name: "alertmanagers.monitoring.coreos.com" namespace: "" from "": no matches for kind "CustomResourceDefinition" in version "apiextensions.k8s.io/v1beta1"
ensure CRDs are installed first)


Then, I used the following 2 commands after googling for hours - 

helm install prom-release prometheus-community/prometheus
helm install prometheus-community/prometheus --generate-name


 Then, to verify which configmaps are available I used the 'kubectl get configmap' command. Used the 'kubectl edit configmap prom-release-prometheus-server' to edit the configuration. Added the following on line 27 - "- proxy-service:8080". 
 
 Outputted all the yaml files 
 
 










